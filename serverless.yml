plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-plugin-offline-dynamodb-stream
  - serverless-offline-aws-sqs
  # - serverless-offline-scheduler # Because it is compiled every time it is executed
  - serverless-offline

service: daily-standup-bot

provider:
  name: aws
  runtime: nodejs10.x
  region: ${env:AWS_REGION, 'us-east-1'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.resourcePrefix}-settings
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.resourcePrefix}-sessions
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.resourcePrefix}-workspaces
  environment:
    SERVERLESS_STAGE: ${self:custom.currentStage}
    SLACK_CLIENT_ID: ${env:SLACK_CLIENT_ID}
    SLACK_CLIENT_SECRET: ${env:SLACK_CLIENT_SECRET}
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_REDIRECT_URI: ${env:SLACK_REDIRECT_URI}
    SESSION_SECRET: ${env:SESSION_SECRET}
    SESSION_DYNAMODB_TABLE: ${self:custom.resourcePrefix}-sessions
    WORKSPACE_DYNAMODB_TABLE: ${self:custom.resourcePrefix}-workspaces
    DYNAMODB_ENDPOINT: ${env:DYNAMODB_ENDPOINT}
    SETTING_DYNAMODB_TABLE: ${self:custom.resourcePrefix}-settings
    STANDUP_DYNAMODB_TABLE: ${self:custom.resourcePrefix}-standups
    # APP_NAME: ${self:service}
    APP_NAME: bolt-tutorial
    SQS_START_QUEUE: ${self:custom.resourcePrefix}-start
    SQS_ENDPOINT: ${env:SQS_ENDPOINT}

custom:
  currentStage: ${opt:stage, self:provider.stage}
  resourcePrefix: ${self:service}-${self:custom.currentStage}

  # serverless-dynamodb-local settings
  dynamodb:
    stages:
      - dev
    start:
      host: localhost
      port: 8000
      migrate: true
      noStart: true

  # serverless-plugin-offline-dynamodb-stream settings
  dynamodbStream:
    host: localhost
    port: 8000
    pollForever: true
    streams:
      - table: ${self:custom.resourcePrefix}-standups
        functions:
          - standup

  serverless-offline-aws-sqs:
    autoCreate: true
    endpoint: ${env:SQS_ENDPOINT, 'http://localhost:9324'}

functions:
  app:
    handler: src/handler.app
    events:
      # Bolt App
      - http:
          method: post
          path: /slack/events

      # OAuth Flow
      - http:
          method: get
          path: /slack/oauth
      - http:
          method: get
          path: /slack/oauth/callback
  scheduler:
    handler: src/handler.scheduler
    reservedConcurrency: 1
    events:
      - schedule: rate(1 minute)
  start:
    handler: src/handler.start
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SQSStartQueue
              - Arn
  standup:
    handler: src/handler.standup
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - DynamoDBStandupsTable
              - StreamArn
          startingPosition: TRIM_HORIZON

resources: ${file(resources.yml)}
