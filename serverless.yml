service: daily-standup-bot

frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  region: ${env:AWS_REGION, 'us-east-1'}
  runtime: go1.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.resourcePrefix}-standups
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.resourcePrefix}-settings
    - Effect: Allow
      Action:
        - events:DescribeRule
        - events:PutRule
        - events:PutTargets
      Resource:
        - "*"

custom:
  currentStage: ${opt:stage, self:provider.stage}
  resourcePrefix: ${self:service}-${self:custom.currentStage}

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  webhook:
    handler: bin/webhook
    events:
      - http:
          path: webhook
          method: post
    environment:
      STANDUPS_TABLE: ${self:custom.resourcePrefix}-standups
      SLACK_TOKEN: ${env:SLACK_TOKEN}
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
  start:
    handler: bin/start
    environment:
      STANDUPS_TABLE: ${self:custom.resourcePrefix}-standups
      SETTINGS_TABLE: ${self:custom.resourcePrefix}-settings
      SLACK_TOKEN: ${env:SLACK_TOKEN}
  send-questions:
    handler: bin/send_questions
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - DynamoDBStandUpsTable
              - StreamArn
          startingPosition: TRIM_HORIZON
    environment:
      STANDUPS_TABLE: ${self:custom.resourcePrefix}-standups
      SLACK_TOKEN: ${env:SLACK_TOKEN}
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
  slash:
    handler: bin/slash
    events:
      - http:
          path: slash
          method: post
    environment:
      SETTINGS_TABLE: ${self:custom.resourcePrefix}-settings
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
      RESOURCE_PREFIX: ${self:custom.resourcePrefix}
  interactive:
    handler: bin/interactive
    events:
      - http:
          path: interactive
          method: post
    environment:
      SETTINGS_TABLE: ${self:custom.resourcePrefix}-settings
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
      RESOURCE_PREFIX: ${self:custom.resourcePrefix}
      START_FUNCTION_ARN:
        Fn::Join:
          - ":"
          - - "arn:aws:lambda:${self:provider.region}"
            - Ref: "AWS::AccountId"
            - "function:${self:custom.resourcePrefix}-start"

resources: ${file(resources.yml)}

plugins:
  - serverless-sam
